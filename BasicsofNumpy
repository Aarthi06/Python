import numpy as np

array=np.array([20,30,40]) #1d array
print(array)

array2=np.array([10,20,30],dtype=float) #define datatype
print(array2)

print(np.array([10,20.4,30])) #upcast values

print(np.array([[10,30],[40,38]]))
twodarray=np.array([[10,30],[40,38]])
print("dimension of array", twodarray.ndim)
print("shape of array",twodarray.shape)
print("size of array",twodarray.size)

a=np.array([[10,20,30],[40,50,60]])
print(a)
print("shape of a",a.shape)
b=np.transpose(a) #transpose array
print("transpose array")
print(b)
print("shape of b",b.shape)

c=np.array([10,20,30,40,50,60])
print(c)
print("reshape array")
reshaped=np.reshape(c,(2,-1))#reshaing array -1 numpy automatically align the column or row
print(reshaped)

print(np.zeros(4))
print(np.ones(4))
print(np.ones(4,dtype=int))
print(np.ones((2,2)))
      
#adding code below 
x=np.array([[10,20,30],[40,50,60]])
flat=x.flatten() #flatten does deep copy
print("flatten 2d to 1d",flat)
flat[0]=100
print("flatten 2d to 1d",flat)
print("###flatten 2d to 1d",x)

ravel=x.ravel() #ravel does shallow copy
print("ravel 2d to 1d   ",ravel)
ravel[0]=1000
print("ravel 2d to 1d   ",ravel)
print("###ravel 2d to 1d   ",x)

#statics
arraynew=np.arange(5,13,3)
print("mean",np.mean(arraynew))
print("Median",np.median(arraynew))
print("std",np.std(arraynew))
